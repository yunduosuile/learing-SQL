1070. 产品销售分析 III Medium

SELECT product_id, year first_year, quantity, price
FROM Sales
WHERE (product_id, year) IN 
(SELECT S1.product_id, S1.year
FROM Sales S1 JOIN Sales S2
ON S1.product_id = S2.product_id
GROUP BY S1.product_id, S1.year
HAVING S1.year <= MIN(S2.year))

# 不容易

SELECT product_id, year first_year, quantity, price
FROM Sales
WHERE (product_id, year) IN (SELECT product_id, MIN(year)
                             FROM Sales
                             GROUP BY product_id)
 
# 第二次很快

1075. 项目员工 I Easy

SELECT project_id, ROUND(AVG(experience_years),2) average_years
FROM Project JOIN Employee
ON Project.employee_id = Employee.employee_id
GROUP BY project_id

# 较容易

1076. 项目员工 II Easy

SELECT project_id
FROM Project
GROUP BY project_id
HAVING COUNT(employee_id) = (SELECT COUNT(employee_id) s
                             FROM Project
                             GROUP BY project_id
                             ORDER BY s DESC
                             LIMIT 1)
                             
# 累

1077. 项目员工 III Medium

SELECT P1.project_id, P1.employee_id
FROM Project P1 JOIN Employee
ON P1.employee_id = Employee.employee_id
WHERE experience_years = (SELECT MAX(experience_years)
                          FROM Project P2 JOIN Employee
                          ON P2.employee_id = Employee.employee_id
                          WHERE P1.project_id = P2.project_id)
                          
1082. 销售分析 I Easy

SELECT seller_id
FROM Sales
GROUP BY seller_id
HAVING SUM(price) >= ALL(SELECT SUM(price)
                         FROM Sales
                         GROUP BY seller_id)
                         
1083. 销售分析 II Easy

SELECT DISTINCT buyer_id 
FROM Sales
WHERE buyer_id IN (SELECT buyer_id 
                   FROM Sales JOIN Product
                   ON Sales.product_id = Product.product_id
                   WHERE product_name = 'S8')
AND buyer_id NOT IN (SELECT buyer_id 
                     FROM Sales JOIN Product
                     ON Sales.product_id = Product.product_id
                     WHERE product_name = 'iPhone')
                     
1084. 销售分析 III Easy

SELECT Product.product_id, product_name
FROM Product JOIN Sales
ON Product.product_id = Sales.product_id
GROUP BY Product.product_id
HAVING MAX(sale_date) <= '2019-03-31' AND MIN(sale_date) >= '2019-01-01' 

# 一种思路

SELECT product_id, product_name
FROM Product
WHERE product_id IN 
(SELECT product_id
FROM Sales
WHERE sale_date BETWEEN '2019-01-01' AND '2019-03-31')
AND product_id NOT IN
(SELECT product_id
FROM Sales
WHERE sale_date > '2019-03-31' OR sale_date < '2019-01-01')

# 另一种思路

1097. 游戏玩法分析 V Hard

SELECT install_dt, COUNT(A1.player_id) installs, ROUND(COUNT(A2.player_id)/COUNT(A1.player_id),2) Day1_retention
FROM Activity A1 JOIN (SELECT DISTINCT player_id, MIN(event_date) install_dt
                       FROM Activity
                       GROUP BY player_id) s
ON A1.event_date = install_dt AND A1.player_id = s.player_id LEFT JOIN Activity A2
ON A1.event_date = A2.event_date - 1 AND A1.player_id = A2.player_id
GROUP BY A1.event_date
ORDER BY A1.event_date


SELECT install_dt, COUNT(t2.player_id) installs, ROUND(IFNULL(COUNT(t1.player_id)/COUNT(t2.player_id),0),2) Day1_retention
FROM 
(SELECT A1.event_date, A1.player_id
FROM Activity A1 JOIN Activity A2
ON A1.event_date = A2.event_date-1 AND A1.player_id = A2.player_id) t1 RIGHT JOIN
(SELECT event_date install_dt, player_id
FROM Activity
WHERE (player_id, event_date) IN
(SELECT player_id, MIN(event_date) event_date
FROM Activity
GROUP BY player_id)) t2 ON t1.event_date = t2.install_dt AND t1.player_id = t2.player_id
GROUP BY install_dt
ORDER BY install_dt

# 感觉就很长

1098. 小众书籍 Medium

SELECT book_id, name
FROM Books
WHERE book_id NOT IN 
(SELECT book_id
FROM Orders
WHERE dispatch_date BETWEEN '2018-06-23' AND '2019-06-23'
GROUP BY book_id
HAVING SUM(quantity) >= 10)
AND available_from < '2019-05-23'

# 不知道为啥会卡住

1107. 每日新用户统计 Medium

SELECT activity_date login_date, COUNT(user_id) user_count
FROM
(SELECT T1.user_id, T1.activity_date
FROM Traffic T1 JOIN Traffic T2
ON T1.user_id = T2.user_id
WHERE T1.activity = 'login' AND T2.activity = 'login'
GROUP BY T1.user_id, T1.activity_date
HAVING T1.activity_date = MIN(T2.activity_date)) t
WHERE DATEDIFF('2019-06-30', activity_date) <= 90
GROUP BY activity_date
ORDER BY activity_date

# 求最小值有更简单的办法

SELECT activity_date login_date, COUNT(user_id) user_count
FROM
(SELECT user_id, MIN(activity_date) activity_date
FROM Traffic
WHERE activity = 'login'
GROUP BY user_id) t
WHERE DATEDIFF('2019-06-30', activity_date) <= 90
GROUP BY activity_date
ORDER BY activity_date

# 如上 不需要写联结

# 1070, 1075, 1076, 1077, 1082, 1083, 1084 Easy; 1098 Medium; 1097, 1107 Hard 
